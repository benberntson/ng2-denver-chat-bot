{"version":3,"file":"main.bundle.js","sources":["webpack:///./src/main.browser.ts","webpack:///./src/app/app.routes.ts","webpack:///./~/@angular2-material/icon/icon-registry.js","webpack:///./src/app/bot/convo/convo.service.ts","webpack:///./src/platform/browser-directives.ts","webpack:///./src/platform/browser-pipes.ts","webpack:///./src/platform/browser-providers.ts","webpack:///./src/platform/browser/angular2-material2/index.ts","webpack:///./~/@angular2-material/icon/icon.js","webpack:///./src/app/app.component.ts","webpack:///./src/app/bot/bot.component.ts","webpack:///./src/app/bot/convo/convo.component.ts","webpack:///./src/app/bot/convo/mini-convo.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/title/index.ts","webpack:///./src/app/home/title/title.service.ts","webpack:///./src/app/home/x-large/index.ts","webpack:///./src/app/home/x-large/x-large.directive.ts","webpack:///./src/app/index.ts","webpack:///./src/app/no-content/index.ts","webpack:///./src/app/no-content/no-content.ts","webpack:///./src/platform/browser.ts","webpack:///./src/platform/environment.ts","webpack:///./src/app/about/index.ts?3483","webpack:///./src/app/bot/bot.template.html","webpack:///./src/app/bot/convo/convo.template.html","webpack:///./src/app/home/home.template.html","webpack:///./~/rxjs/add/observable/forkJoin.js","webpack:///./~/rxjs/add/observable/of.js","webpack:///./~/rxjs/add/operator/catch.js","webpack:///./~/rxjs/add/operator/do.js","webpack:///./~/rxjs/add/operator/filter.js","webpack:///./~/rxjs/add/operator/finally.js","webpack:///./~/rxjs/add/operator/share.js","webpack:///./~/rxjs/operator/catch.js","webpack:///./~/rxjs/operator/do.js","webpack:///./~/rxjs/operator/filter.js","webpack:///./~/rxjs/operator/finally.js","webpack:///./~/rxjs/operator/share.js","webpack:///./src/app/app.style.css","webpack:///./src/app/bot/bot.styles.css","webpack:///./src/app/bot/convo/convo.styles.css","webpack:///./src/app/home/home.style.css"],"sourcesContent":["/*\n * Providers provided by Angular\n */\nimport { bootstrap } from '@angular/platform-browser-dynamic';\n\n/*\n * Platform and Environment\n * our providers/directives/pipes\n */\nimport { PLATFORM_PROVIDERS } from './platform/browser';\nimport { ENV_PROVIDERS, decorateComponentRef } from './platform/environment';\n\n\n/*\n * App Component\n * our top level component that holds all of our components\n */\nimport { App } from './app';\n\nimport { APP_ROUTE_PROVIDERS } from './app/app.routes';\n\nimport { ConvoService } from './app/bot/convo/convo.service';\n\nexport function main(initialHmrState?: any): Promise<any> {\n\n  return bootstrap(App, [\n\n      ...PLATFORM_PROVIDERS,\n      ...ENV_PROVIDERS,\n    APP_ROUTE_PROVIDERS,\n    ConvoService\n  ])\n    .then(decorateComponentRef)\n    .catch(err => console.error(err));\n\n}\n\nif ('development' === ENV && HMR === true) {\n  let ngHmr = require('angular2-hmr');\n  ngHmr.hotModuleReplacement(main, module);\n} else {\n  document.addEventListener('DOMContentLoaded', () => main());\n}\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/main.browser.ts\n **/","import { WebpackAsyncRoute } from '@angularclass/webpack-toolkit';\nimport { provideRouter, RouterConfig } from '@angular/router';\nimport { Home } from './home/home.component.ts';\nimport { NoContent } from './no-content';\nimport { Bot } from './bot/bot.component';\nimport { Convo } from './bot/convo/convo.component';\n\nexport const routes: RouterConfig = [\n  {\n    path: '',\n    component: Home\n  },\n  {\n    path: 'home',\n    component: Home\n  },\n  {\n    path: 'bot',\n    component: Bot\n  },\n  {\n    path: 'bot/conversation',\n    component: Convo\n  },\n  {\n    path: 'about',\n    component: 'About'\n  },\n  {\n    path: '**',\n    component: NoContent\n  }\n];\n\nexport const APP_ROUTE_PROVIDERS = [provideRouter(routes)];\n\nexport const asyncRoutes: AsyncRoutes = {\n  'About': require('es6-promise-loader!./about'),\n};\n\nexport const prefetchRouteCallbacks: Array<IdleCallbacks> = [\n  asyncRoutes['About'],\n  asyncRoutes['Detail'],\n];\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/app/app.routes.ts\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = require('@angular/core');\r\nvar http_1 = require('@angular/http');\r\nvar error_1 = require('@angular2-material/core/errors/error');\r\nvar Observable_1 = require('rxjs/Observable');\r\nrequire('rxjs/add/observable/forkJoin');\r\nrequire('rxjs/add/observable/of');\r\nrequire('rxjs/add/operator/map');\r\nrequire('rxjs/add/operator/filter');\r\nrequire('rxjs/add/operator/do');\r\nrequire('rxjs/add/operator/share');\r\nrequire('rxjs/add/operator/finally');\r\nrequire('rxjs/add/operator/catch');\r\n/** Exception thrown when attempting to load an icon with a name that cannot be found. */\r\nvar MdIconNameNotFoundError = (function (_super) {\r\n    __extends(MdIconNameNotFoundError, _super);\r\n    function MdIconNameNotFoundError(iconName) {\r\n        _super.call(this, \"Unable to find icon with the name \\\"\" + iconName + \"\\\"\");\r\n    }\r\n    return MdIconNameNotFoundError;\r\n}(error_1.MdError));\r\nexports.MdIconNameNotFoundError = MdIconNameNotFoundError;\r\n/**\r\n * Exception thrown when attempting to load SVG content that does not contain the expected\r\n * <svg> tag.\r\n */\r\nvar MdIconSvgTagNotFoundError = (function (_super) {\r\n    __extends(MdIconSvgTagNotFoundError, _super);\r\n    function MdIconSvgTagNotFoundError() {\r\n        _super.call(this, '<svg> tag not found');\r\n    }\r\n    return MdIconSvgTagNotFoundError;\r\n}(error_1.MdError));\r\nexports.MdIconSvgTagNotFoundError = MdIconSvgTagNotFoundError;\r\n/**\r\n  * Configuration for an icon, including the URL and possibly the cached SVG element.\r\n  * @internal\r\n  */\r\nvar SvgIconConfig = (function () {\r\n    function SvgIconConfig(url) {\r\n        this.url = url;\r\n        this.svgElement = null;\r\n    }\r\n    return SvgIconConfig;\r\n}());\r\n/** Returns the cache key to use for an icon namespace and name. */\r\nvar iconKey = function (namespace, name) { return namespace + ':' + name; };\r\n/**\r\n * Service to register and display icons used by the <md-icon> component.\r\n * - Registers icon URLs by namespace and name.\r\n * - Registers icon set URLs by namespace.\r\n * - Registers aliases for CSS classes, for use with icon fonts.\r\n * - Loads icons from URLs and extracts individual icons from icon sets.\r\n */\r\nvar MdIconRegistry = (function () {\r\n    function MdIconRegistry(_http) {\r\n        this._http = _http;\r\n        /**\r\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\r\n         */\r\n        this._svgIconConfigs = new Map();\r\n        /**\r\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\r\n         * Multiple icon sets can be registered under the same namespace.\r\n         */\r\n        this._iconSetConfigs = new Map();\r\n        /** Cache for icons loaded by direct URLs. */\r\n        this._cachedIconsByUrl = new Map();\r\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\r\n        this._inProgressUrlFetches = new Map();\r\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\r\n        this._fontCssClassesByAlias = new Map();\r\n        /**\r\n         * The CSS class to apply when an <md-icon> component has no icon name, url, or font specified.\r\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\r\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\r\n         */\r\n        this._defaultFontSetClass = 'material-icons';\r\n    }\r\n    /** Registers an icon by URL in the default namespace. */\r\n    MdIconRegistry.prototype.addSvgIcon = function (iconName, url) {\r\n        return this.addSvgIconInNamespace('', iconName, url);\r\n    };\r\n    /** Registers an icon by URL in the specified namespace. */\r\n    MdIconRegistry.prototype.addSvgIconInNamespace = function (namespace, iconName, url) {\r\n        var key = iconKey(namespace, iconName);\r\n        this._svgIconConfigs.set(key, new SvgIconConfig(url));\r\n        return this;\r\n    };\r\n    /** Registers an icon set by URL in the default namespace. */\r\n    MdIconRegistry.prototype.addSvgIconSet = function (url) {\r\n        return this.addSvgIconSetInNamespace('', url);\r\n    };\r\n    /** Registers an icon set by URL in the specified namespace. */\r\n    MdIconRegistry.prototype.addSvgIconSetInNamespace = function (namespace, url) {\r\n        var config = new SvgIconConfig(url);\r\n        if (this._iconSetConfigs.has(namespace)) {\r\n            this._iconSetConfigs.get(namespace).push(config);\r\n        }\r\n        else {\r\n            this._iconSetConfigs.set(namespace, [config]);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an mdIcon\r\n     * component with the alias as the fontSet input will cause the class name to be applied\r\n     * to the <md-icon> element.\r\n     */\r\n    MdIconRegistry.prototype.registerFontClassAlias = function (alias, className) {\r\n        if (className === void 0) { className = alias; }\r\n        this._fontCssClassesByAlias.set(alias, className);\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns the CSS class name associated with the alias by a previous call to\r\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\r\n     */\r\n    MdIconRegistry.prototype.classNameForFontAlias = function (alias) {\r\n        return this._fontCssClassesByAlias.get(alias) || alias;\r\n    };\r\n    /**\r\n     * Sets the CSS class name to be used for icon fonts when an <md-icon> component does not\r\n     * have a fontSet input value, and is not loading an icon by name or URL.\r\n     */\r\n    MdIconRegistry.prototype.setDefaultFontSetClass = function (className) {\r\n        this._defaultFontSetClass = className;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns the CSS class name to be used for icon fonts when an <md-icon> component does not\r\n     * have a fontSet input value, and is not loading an icon by name or URL.\r\n     */\r\n    MdIconRegistry.prototype.getDefaultFontSetClass = function () {\r\n        return this._defaultFontSetClass;\r\n    };\r\n    /**\r\n     * Returns an Observable that produces the icon (as an <svg> DOM element) from the given URL.\r\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\r\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\r\n     * it will not contain any modifications made to elements previously returned).\r\n     */\r\n    MdIconRegistry.prototype.getSvgIconFromUrl = function (url) {\r\n        var _this = this;\r\n        if (this._cachedIconsByUrl.has(url)) {\r\n            return Observable_1.Observable.of(cloneSvg(this._cachedIconsByUrl.get(url)));\r\n        }\r\n        return this._loadSvgIconFromConfig(new SvgIconConfig(url))\r\n            .do(function (svg) { return _this._cachedIconsByUrl.set(url, svg); })\r\n            .map(function (svg) { return cloneSvg(svg); });\r\n    };\r\n    /**\r\n     * Returns an Observable that produces the icon (as an <svg> DOM element) with the given name\r\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\r\n     * if not, the Observable will throw an MdIconNameNotFoundError.\r\n     */\r\n    MdIconRegistry.prototype.getNamedSvgIcon = function (name, namespace) {\r\n        if (namespace === void 0) { namespace = ''; }\r\n        // Return (copy of) cached icon if possible.\r\n        var key = iconKey(namespace, name);\r\n        if (this._svgIconConfigs.has(key)) {\r\n            return this._getSvgFromConfig(this._svgIconConfigs.get(key));\r\n        }\r\n        // See if we have any icon sets registered for the namespace.\r\n        var iconSetConfigs = this._iconSetConfigs.get(namespace);\r\n        if (iconSetConfigs) {\r\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\r\n        }\r\n        return Observable_1.Observable.throw(new MdIconNameNotFoundError(key));\r\n    };\r\n    /**\r\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\r\n     */\r\n    MdIconRegistry.prototype._getSvgFromConfig = function (config) {\r\n        if (config.svgElement) {\r\n            // We already have the SVG element for this icon, return a copy.\r\n            return Observable_1.Observable.of(cloneSvg(config.svgElement));\r\n        }\r\n        else {\r\n            // Fetch the icon from the config's URL, cache it, and return a copy.\r\n            return this._loadSvgIconFromConfig(config)\r\n                .do(function (svg) { return config.svgElement = svg; })\r\n                .map(function (svg) { return cloneSvg(svg); });\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\r\n     * First searches the available cached icons for a nested element with a matching name, and\r\n     * if found copies the element to a new <svg> element. If not found, fetches all icon sets\r\n     * that have not been cached, and searches again after all fetches are completed.\r\n     * The returned Observable produces the SVG element if possible, and throws\r\n     * MdIconNameNotFoundError if no icon with the specified name can be found.\r\n     */\r\n    MdIconRegistry.prototype._getSvgFromIconSetConfigs = function (name, iconSetConfigs) {\r\n        var _this = this;\r\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\r\n        // requested name.\r\n        var namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\r\n        if (namedIcon) {\r\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\r\n            // time anyway, there's probably not much advantage compared to just always extracting\r\n            // it from the icon set.\r\n            return Observable_1.Observable.of(namedIcon);\r\n        }\r\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\r\n        // fetched, fetch them now and look for iconName in the results.\r\n        var iconSetFetchRequests = iconSetConfigs\r\n            .filter(function (iconSetConfig) { return !iconSetConfig.svgElement; })\r\n            .map(function (iconSetConfig) {\r\n            return _this._loadSvgIconSetFromConfig(iconSetConfig)\r\n                .catch(function (err, caught) {\r\n                // Swallow errors fetching individual URLs so the combined Observable won't\r\n                // necessarily fail.\r\n                console.log(\"Loading icon set URL: \" + iconSetConfig.url + \" failed: \" + err);\r\n                return Observable_1.Observable.of(null);\r\n            })\r\n                .do(function (svg) {\r\n                // Cache SVG element.\r\n                if (svg) {\r\n                    iconSetConfig.svgElement = svg;\r\n                }\r\n            });\r\n        });\r\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\r\n        // cached SVG element (unless the request failed), and we can check again for the icon.\r\n        return Observable_1.Observable.forkJoin(iconSetFetchRequests)\r\n            .map(function (ignoredResults) {\r\n            var foundIcon = _this._extractIconWithNameFromAnySet(name, iconSetConfigs);\r\n            if (!foundIcon) {\r\n                throw new MdIconNameNotFoundError(name);\r\n            }\r\n            return foundIcon;\r\n        });\r\n    };\r\n    /**\r\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\r\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\r\n     * returns it. Returns null if no matching element is found.\r\n     */\r\n    MdIconRegistry.prototype._extractIconWithNameFromAnySet = function (iconName, iconSetConfigs) {\r\n        // Iterate backwards, so icon sets added later have precedence.\r\n        for (var i = iconSetConfigs.length - 1; i >= 0; i--) {\r\n            var config = iconSetConfigs[i];\r\n            if (config.svgElement) {\r\n                var foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName, config);\r\n                if (foundIcon) {\r\n                    return foundIcon;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\r\n     * from it.\r\n     */\r\n    MdIconRegistry.prototype._loadSvgIconFromConfig = function (config) {\r\n        var _this = this;\r\n        return this._fetchUrl(config.url)\r\n            .map(function (svgText) { return _this._createSvgElementForSingleIcon(svgText, config); });\r\n    };\r\n    /**\r\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\r\n     * from it.\r\n     */\r\n    MdIconRegistry.prototype._loadSvgIconSetFromConfig = function (config) {\r\n        var _this = this;\r\n        // TODO: Document that icons should only be loaded from trusted sources.\r\n        return this._fetchUrl(config.url)\r\n            .map(function (svgText) { return _this._svgElementFromString(svgText); });\r\n    };\r\n    /**\r\n     * Creates a DOM element from the given SVG string, and adds default attributes.\r\n     */\r\n    MdIconRegistry.prototype._createSvgElementForSingleIcon = function (responseText, config) {\r\n        var svg = this._svgElementFromString(responseText);\r\n        this._setSvgAttributes(svg, config);\r\n        return svg;\r\n    };\r\n    /**\r\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\r\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\r\n     * returns it. Returns null if no matching element is found.\r\n     */\r\n    MdIconRegistry.prototype._extractSvgIconFromSet = function (iconSet, iconName, config) {\r\n        var iconNode = iconSet.querySelector('#' + iconName);\r\n        if (!iconNode) {\r\n            return null;\r\n        }\r\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\r\n        // the content of a new <svg> node.\r\n        if (iconNode.tagName.toLowerCase() == 'svg') {\r\n            return this._setSvgAttributes(iconNode.cloneNode(true), config);\r\n        }\r\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\r\n        // the correct nodes, but the SVG content doesn't render. Instead we\r\n        // have to create an empty SVG node using innerHTML and append its content.\r\n        // Elements created using DOMParser.parseFromString have the same problem.\r\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\r\n        var svg = this._svgElementFromString('<svg></svg>');\r\n        // Clone the node so we don't remove it from the parent icon set element.\r\n        svg.appendChild(iconNode.cloneNode(true));\r\n        return this._setSvgAttributes(svg, config);\r\n    };\r\n    /**\r\n     * Creates a DOM element from the given SVG string.\r\n     */\r\n    MdIconRegistry.prototype._svgElementFromString = function (str) {\r\n        // TODO: Is there a better way than innerHTML? Renderer doesn't appear to have a method for\r\n        // creating an element from an HTML string.\r\n        var div = document.createElement('DIV');\r\n        div.innerHTML = str;\r\n        var svg = div.querySelector('svg');\r\n        if (!svg) {\r\n            throw new MdIconSvgTagNotFoundError();\r\n        }\r\n        return svg;\r\n    };\r\n    /**\r\n     * Sets the default attributes for an SVG element to be used as an icon.\r\n     */\r\n    MdIconRegistry.prototype._setSvgAttributes = function (svg, config) {\r\n        if (!svg.getAttribute('xmlns')) {\r\n            svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\r\n        }\r\n        svg.setAttribute('fit', '');\r\n        svg.setAttribute('height', '100%');\r\n        svg.setAttribute('width', '100%');\r\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\r\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\r\n        return svg;\r\n    };\r\n    /**\r\n     * Returns an Observable which produces the string contents of the given URL. Results may be\r\n     * cached, so future calls with the same URL may not cause another HTTP request.\r\n     */\r\n    MdIconRegistry.prototype._fetchUrl = function (url) {\r\n        var _this = this;\r\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\r\n        // already a request in progress for that URL. It's necessary to call share() on the\r\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\r\n        if (this._inProgressUrlFetches.has(url)) {\r\n            return this._inProgressUrlFetches.get(url);\r\n        }\r\n        // TODO(jelbourn): for some reason, the `finally` operator \"loses\" the generic type on the\r\n        // Observable. Figure out why and fix it.\r\n        var req = this._http.get(url)\r\n            .map(function (response) { return response.text(); })\r\n            .finally(function () {\r\n            _this._inProgressUrlFetches.delete(url);\r\n        })\r\n            .share();\r\n        this._inProgressUrlFetches.set(url, req);\r\n        return req;\r\n    };\r\n    MdIconRegistry = __decorate([\r\n        core_1.Injectable(), \r\n        __metadata('design:paramtypes', [http_1.Http])\r\n    ], MdIconRegistry);\r\n    return MdIconRegistry;\r\n}());\r\nexports.MdIconRegistry = MdIconRegistry;\r\n/** Clones an SVGElement while preserving type information. */\r\nfunction cloneSvg(svg) {\r\n    return svg.cloneNode(true);\r\n}\r\n//# sourceMappingURL=icon-registry.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular2-material/icon/icon-registry.js\n ** module id = 378\n ** module chunks = 3\n **/","import { Injectable } from '@angular/core';\n\nimport { MiniConvo } from './mini-convo';\nimport { ActivatedRoute } from '@angular/router';\n\n@Injectable()\nexport class ConvoService{\n  private _responseMap: Map<string,string>;\n\n  constructor(){\n    this.initResponseMap();\n  }\n\n  /**\n   * createConvo\n   *\n   * ncreates a mini conversation\n   */\n  public createConvo(question: string): MiniConvo {\n    return new MiniConvo(this.getAnswerFor(question),question);\n  }\n\n  /**\n   * getAnswerFor\n   *\n   * gets an answer for the question.\n   *\n   */\n  public getAnswerFor(question: string): string{\n\n    let cleanedWords = question.split(' ')\n      .map(text => text.replace(/\\W/,''))\n      .map(text => text.trim())\n      .map(text => text.toLowerCase())\n      .filter(word => word.length > 2 || word == 'hi')\n      .filter(word => !(word === 'the' || word === 'for' || word === 'our'));\n\n    let wordBlocks = [];\n\n    //filters for duplicates\n    cleanedWords.forEach((word) => {\n      if(wordBlocks.indexOf(word) === -1)\n        wordBlocks.push(word);\n    });\n\n\n    let haveAnswer = false;\n    let builtQuestion: string;\n\n    for(let attemptSize = wordBlocks.length; attemptSize > 0 && !haveAnswer; --attemptSize){\n      for(let i = 0; i + attemptSize <= wordBlocks.length && !haveAnswer; ++i){\n\n        builtQuestion = \"\";\n\n        for(let j = 0; j < attemptSize && !haveAnswer; ++j){\n          builtQuestion += \" \" + wordBlocks[j + i];\n        }\n\n        builtQuestion = builtQuestion.trim();\n        haveAnswer = !(!this._responseMap.get(builtQuestion));\n        //console.log(`has answer: ${haveAnswer},\\nbuiltQuestion: ${builtQuestion}`);\n      }\n    }\n\n    if(haveAnswer){\n      return this._responseMap.get(builtQuestion);\n    } else {\n      return \"I don't understand...\";\n    }\n\n  }\n\n  /**\n   * getResponseMap\n   *\n   * gets a map of quesions to answers\n   *\n   * @return Map<string,string>\n   */\n  private initResponseMap(): Map<string,string>{\n    this._responseMap =  new Map<string,string>();\n\n    this._responseMap.set('hi','Hello there!');\n    this._responseMap.set('hello','Hello there!');\n    this._responseMap.set('yes','Yes?');\n    this._responseMap.set('sir','Sir?');\n    this._responseMap.set('mam','That\\'s more like it.');\n    this._responseMap.set('maam','That\\'s more like it.');\n    this._responseMap.set('president usa','Barack H. Obama');\n    this._responseMap.set('bro','Yo, wassup, bro!');\n    this._responseMap.set('denver mayor','Michael Hancock');\n    this._responseMap.set('mayor','Michael Hancock');\n    this._responseMap.set('nyc mayor','Bill de Blasio');\n    this._responseMap.set('fomer nyc mayor','Michael Bloomberg');\n    this._responseMap.set('fomer nyc mayor','Michael Bloomberg');\n    this._responseMap.set('fomer denver mayor','Guillermo Vidal');\n    this._responseMap.set('ethnicities','for 2010: white: 68.9%, non-hispanic white: 52.2%, black: 10.2%, asian: 3.14%, hispanic: 31.8%');\n    this._responseMap.set('most populous city','Denver');\n    this._responseMap.set('most populous city colorado','Denver');\n    this._responseMap.set('denver founded','November 17, 1858');\n    this._responseMap.set('year denver founded','1858');\n    this._responseMap.set('year founded','1858');\n    this._responseMap.set('month founded','November');\n    this._responseMap.set('denver neighborhoods','Central, East, North, or West?');\n    this._responseMap.set('neighborhood','Central, East, North, or West?');\n    this._responseMap.set('neighborhoods','Central, East, North, or West?');\n    this._responseMap.set('media household income','$45,438');\n    this._responseMap.set('media income','$45,438');\n    this._responseMap.set('household income','$45,438');\n    this._responseMap.set('home income','$45,438');\n    this._responseMap.set('language','English');\n    this._responseMap.set('tallest building','Republic Plaza');\n    this._responseMap.set('tallest skyscraper','Republic Plaza');\n    this._responseMap.set('tallest highrise','Republic Plaza');\n    this._responseMap.set('tallest highrise','Republic Plaza');\n    this._responseMap.set('landmarks','16th Street Mall, Avenue Theater, Black American West Museum Denver Mint, Denver Firefighters Museum, Denver Zoo, Denver Public Library, Union Station');\n    this._responseMap.set('16th street mall','a mile long pedestrian-only street that runs from Denver Union Station in LoDo to Broadway at the other end of downtown.');\n    this._responseMap.set('avenue theater','a professional theater located in the Downtown Denver vicinity');\n    this._responseMap.set('black american museum','Reflects the history of African Americans in the West and Denver.');\n    this._responseMap.set('Brown Palace hotel','Proclaimed by Elvis as \"The best hotel in the world\", a historic hotel that has hosted many celebrities, dignitaries, and other important people.');\n    this._responseMap.set('denver mint','The single largest producer of coins in the world.')\n    this._responseMap.set('denver firefighers museum','A museum for Denver\\'s firefighters');\n    this._responseMap.set('colorado state capitol','The seat of state government in Colorado');\n    this._responseMap.set('denver museum nature and science','One of America\\'s premier museums exhibiting world culture.');\n    this._responseMap.set('confluence park','Where the city started at the confluence of South Platte and Cherry Creek.');\n    this._responseMap.set('df tower','When it was built in 1910, it was the tallest building west of the Mississippi.');\n    this._responseMap.set('denvers downtown aquarium','A full-sized public aquarium.');\n    this._responseMap.set('denver art museum','The largest art museum between Kansas City and San Francisco.');\n    this._responseMap.set('denver botanic gardens','Made a Hollywood debut in Woody Allen\\'s Sleeper.');\n    this._responseMap.set('elitch theatre','An amazing historic theatre at the site of the original.');\n    this._responseMap.set('sakura square','\"Tiny Tokyo\", the center of the historical and prominent Japanese community of Denver, first formed around 1944.');\n    this._responseMap.set('union station','A magnificent three-story building and the future hub of RTD\\'s commuter rail network.');\n    this._responseMap.set('tattered cover','A very popular independent bookstore. It has hosted lectures by such great poets and minds as Denverites Allen Ginsberg and Neal Cassady.');\n    this._responseMap.set('have mcdonalds','Yes.');\n    this._responseMap.set('denver area code','303 and 720');\n    this._responseMap.set('denver area codes','303 and 720');\n    this._responseMap.set('universities','UC Denver');\n    this._responseMap.set('university','UC Denver');\n    this._responseMap.set('school','UC Denver');\n    this._responseMap.set('college','UC Denver');\n    this._responseMap.set('major attractions','Denver Center for the Performing Arts, Denver Botanic Gardens, Larimer Square, 16th Street Mall, United States Mint, Civic Center Park');\n    this._responseMap.set('tourist locations',' Botanic Gardens, Kirkland Museum of Fine & Decorative Art, Coors Field, Denver Zoo, Denver Public Library, Larimer Square, Civic Center Park');\n    this._responseMap.set('tourist places','Kirkland Museum of Fine & Decorative Art, Denver Art Museum, Coors Field, Denver Zoo, Colorado State Capitol, Denver Public Library, Larimer Square, 16th Street Mall, United States Mint, Civic Center Park');\n    this._responseMap.set('tourist sites','Mount Evans, Museum of Nature & Science, Denver Center for the Performing Arts, Denver Botanic Gardens, Larimer Square, 16th Street Mall, United States Mint, Civic Center Park');\n    this._responseMap.set('major sites','Mount Evans, Museum of Nature & Science, Denver Center for the Performing Arts, Denver Botanic Gardens, Kirkland Museum of Fine & Decorative Art, Denver Art Museum, Coors Field, Denver Zoo, Colorado State Capitol');\n    this._responseMap.set('tourist attractions','Mount Evans, Museum of Nature & Science, Denver Center for the Performing Arts, Denver Botanic Gardens, Kirkland Museum of Fine & Decorative Art, Denver Art Museum, Coors Field, Denver Zoo');\n    this._responseMap.set('luxury hotels','Brown Palace Hotel and Spa, Oxford Hotel, the ART');\n    this._responseMap.set('midrange hotels','Hilton Garden Inn, Aloft, Hyatt House');\n    this._responseMap.set('midlevel hotels','Hilton Garden Inn, Aloft, Hyatt House');\n    this._responseMap.set('budget hotels','La Quinta Inn, Days Inn, Comfort Inn');\n    this._responseMap.set('motels','La Quinta Inn, Days Inn, Comfort Inn');\n    this._responseMap.set('hotels','Did you mean \"Luxury Hotels\", \"Midrange Hotels\", or \"Budget Hotels\"?');\n    this._responseMap.set('downtown parks','Civic Center Park, Gates Crescent Park, Governor’s Park, Hirshorn Park, Jefferson Park, Sonny Lawson Park, Skyline Park, Sunken Gardens Park, Viking Park');\n    this._responseMap.set('parks downtown','Benedict Fountain Park, Centennial Park, City of Cuernavaca Park, Commons Park, Curtis Park, Denver Skate Park, Downtown Children’s Playground, Fishback Park');\n    this._responseMap.set('park downtown','Gates Crescent Park, Governor’s Park, Hirshorn Park, Jefferson Park, Sonny Lawson Park, Quality Hill Park, Railyard Dog Park, Skyline Park, Sunken Gardens Park, Viking Park');\n    this._responseMap.set('downtown park','Benedict Fountain Park, Centennial Park, City of Cuernavaca Park, Civic Center Park, Commons Park, Quality Hill Park, Railyard Dog Park, Skyline Park, Sunken Gardens Park, Viking Park');\n    this._responseMap.set('drink','robots can\\'t drink...');\n    this._responseMap.set('soccer team','Colorado Rapids');\n    this._responseMap.set('rugby team','Denver Stampede');\n    this._responseMap.set('have rugby','Yes.');\n    this._responseMap.set('have soccer','Yes.');\n    this._responseMap.set('have football','Yes.');\n    this._responseMap.set('have basketball','Yes.');\n    this._responseMap.set('have baseball','Yes.');\n    this._responseMap.set('have baseball','Yes.');\n    this._responseMap.set('have hockery','Yes.');\n    this._responseMap.set('have soccer','Yes.');\n    this._responseMap.set('have library','Yes.');\n    this._responseMap.set('have community college','Yes.');\n    this._responseMap.set('have college','Yes.');\n    this._responseMap.set('have university','Yes.');\n    this._responseMap.set('have public school','Yes.');\n    this._responseMap.set('have public schools','Yes.');\n    this._responseMap.set('have public bars','Yes.');\n    this._responseMap.set('school system','Denver Public Schools');\n    this._responseMap.set('public school system','Denver Public Schools');\n    this._responseMap.set('you gay','Robots don\\'t have sexualities');\n    this._responseMap.set('you religious','Robots don\\'t have religious beliefs');\n    this._responseMap.set('you cool','Wassup, dude.');\n    this._responseMap.set('you bro','Wassup, bro.');\n    this._responseMap.set('tim cook','Apple CEO.... BORING!');\n    this._responseMap.set('bill gates','Former MicroSoft CEO.... BORING!');\n    this._responseMap.set('richard stallman','Install Gentoo!');\n    this._responseMap.set('gentoo','Install Gentoo!');\n    this._responseMap.set('linux disto','Install Gentoo!');\n    this._responseMap.set('ubuntu','Ubuntu is too easy!');\n    this._responseMap.set('whisky','yuck!');\n    this._responseMap.set('love','Will you be mine?');\n    this._responseMap.set('mormon','Many are in Utah.');\n    this._responseMap.set('mormons','Many are in Utah.');\n    this._responseMap.set('will you','Maybe...');\n    this._responseMap.set('are you','I don\\'t know... Are you?');\n    this._responseMap.set('who are you','A Denver Chat Bot');\n    this._responseMap.set('love you','Ahh... Thanks!');\n    this._responseMap.set('columbine','Tragic... *sniff*');\n    this._responseMap.set('aurora','Tragic... *sniff*');\n    this._responseMap.set('party bar','ViewHouse');\n    this._responseMap.set('best drink','Peach Connection');\n    this._responseMap.set('miller','It\\'s Miller Time!');\n    this._responseMap.set('best pizza','Virgilio\\'s Pizzeria and Wine Bar');\n    this._responseMap.set('pizza','I recommend Brava! Pizza.');\n    this._responseMap.set('beer','Wynkoop Brewing Company');\n    this._responseMap.set('denver police','I love the men in blue.');\n    this._responseMap.set('denver police number','720-913-2000');\n    this._responseMap.set('emergency number','911');\n    this._responseMap.set('breckenridge brewery','Good beer! Goto: 2220 Blake St., Denver, CO 80205');\n    this._responseMap.set('food','I recommend Fruition Restaurant:\\n 1313 E 6th Ave, Denver, CO 80218-3453');\n    this._responseMap.set('mcdonalds','Goto:\\n4490 Washington St,\\nDenver,CO 80216');\n    this._responseMap.set('mickey ds','Goto:\\n4490 Washington St,\\nDenver,CO 80216');\n    this._responseMap.set('burger king','NO! McDonalds! Goto:\\n4490 Washington St,\\nDenver,CO 80216');\n    this._responseMap.set('gym','I recommend Denver Gym & Fitness.');\n    this._responseMap.set('','');\n    this._responseMap.set('','');\n\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/app/bot/convo/convo.service.ts\n **/","/*\n * These are globally available directives in any template\n */\n// Angular 2\nimport { PLATFORM_DIRECTIVES } from '@angular/core';\n// Angular 2 Router\nimport { ROUTER_DIRECTIVES } from '@angular/router';\n// Angular 2 forms\nimport { REACTIVE_FORM_DIRECTIVES } from '@angular/forms';\n\n// Angular 2 Material 2\n// TODO(gdi2290): replace with @angular2-material/all\nimport { MATERIAL_DIRECTIVES } from './browser/angular2-material2';\n\n// application_directives: directives that are global through out the application\nexport const APPLICATION_DIRECTIVES = [\n  ...ROUTER_DIRECTIVES,\n  ...REACTIVE_FORM_DIRECTIVES,\n  ...MATERIAL_DIRECTIVES\n];\n\nexport const DIRECTIVES = [\n  { provide: PLATFORM_DIRECTIVES, multi: true, useValue: APPLICATION_DIRECTIVES }\n];\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/platform/browser-directives.ts\n **/","/*\n * These are globally available pipes in any template\n */\n\nimport { PLATFORM_PIPES } from '@angular/core';\n\n// application_pipes: pipes that are global through out the application\nexport const APPLICATION_PIPES = [\n\n];\n\nexport const PIPES = [\n  { provide: PLATFORM_PIPES, multi: true, useValue: APPLICATION_PIPES }\n];\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/platform/browser-pipes.ts\n **/","/*\n * These are globally available services in any component or any other service\n */\n\n// Angular 2\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n// Angular 2 Http\nimport { HTTP_PROVIDERS } from '@angular/http';\n// Angular 2 Router\nimport { provideRouter } from '@angular/router';\n// Angular 2 forms\nimport { disableDeprecatedForms, provideForms } from '@angular/forms';\n\n// Angular 2 Material\n// TODO(gdi2290): replace with @angular2-material/all\nimport { MATERIAL_PROVIDERS } from './browser/angular2-material2';\n\n// AngularClass\nimport { provideWebpack } from '@angularclass/webpack-toolkit';\nimport { providePrefetchIdleCallbacks } from '@angularclass/request-idle-callback';\n\n\nimport { routes, asyncRoutes, prefetchRouteCallbacks } from '../app/app.routes';\n/*\n* Application Providers/Directives/Pipes\n* providers/directives/pipes that only live in our browser environment\n*/\nexport const APPLICATION_PROVIDERS = [\n  // new Angular 2 forms\n  disableDeprecatedForms(),\n  provideForms(),\n\n  provideRouter(routes),\n  provideWebpack(asyncRoutes),\n  providePrefetchIdleCallbacks(prefetchRouteCallbacks),\n\n  ...HTTP_PROVIDERS,\n  ...MATERIAL_PROVIDERS,\n\n  { provide: LocationStrategy, useClass: HashLocationStrategy }\n];\n\nexport const PROVIDERS = [\n  ...APPLICATION_PROVIDERS\n];\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/platform/browser-providers.ts\n **/","import { MdAnchor, MdButton } from '@angular2-material/button';\nimport { MD_CARD_DIRECTIVES } from '@angular2-material/card';\nimport { MdCheckbox } from '@angular2-material/checkbox';\nimport { MD_GRID_LIST_DIRECTIVES } from '@angular2-material/grid-list';\nimport { MdIcon, MdIconRegistry } from '@angular2-material/icon';\nimport { MD_INPUT_DIRECTIVES } from '@angular2-material/input';\nimport { MD_LIST_DIRECTIVES } from '@angular2-material/list';\nimport { MdProgressBar } from '@angular2-material/progress-bar';\nimport { MdProgressCircle, MdSpinner } from '@angular2-material/progress-circle';\nimport { MdRadioButton, MdUniqueSelectionDispatcher, MdRadioGroup } from '@angular2-material/radio';\nimport { MD_SIDENAV_DIRECTIVES } from '@angular2-material/sidenav';\nimport { MD_SLIDE_TOGGLE_DIRECTIVES } from '@angular2-material/slide-toggle';\nimport { MD_TABS_DIRECTIVES } from '@angular2-material/tabs';\nimport { MdToolbar } from '@angular2-material/toolbar';\n/*\n * we are grouping the module so we only need to manage the imports in one location\n */\n\nexport const MATERIAL_PIPES = [\n\n];\n\nexport const MATERIAL_DIRECTIVES = [\n  ...[\n    MdAnchor,\n    MdButton,\n    MdCheckbox,\n    MdIcon,\n    MdProgressBar,\n    MdProgressCircle,\n    MdRadioButton,\n    MdRadioGroup,\n    MdSpinner,\n    MdToolbar\n  ],\n  ...MD_CARD_DIRECTIVES,\n  ...MD_GRID_LIST_DIRECTIVES,\n  ...MD_INPUT_DIRECTIVES,\n  ...MD_LIST_DIRECTIVES,\n  ...MD_SIDENAV_DIRECTIVES,\n  ...MD_SLIDE_TOGGLE_DIRECTIVES,\n  ...MD_TABS_DIRECTIVES\n];\n\nexport const MATERIAL_PROVIDERS = [\n  MdIconRegistry,\n  MdUniqueSelectionDispatcher\n];\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/platform/browser/angular2-material2/index.ts\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = require('@angular/core');\r\nvar error_1 = require('@angular2-material/core/errors/error');\r\nvar icon_registry_1 = require('./icon-registry');\r\nvar icon_registry_2 = require('./icon-registry');\r\nexports.MdIconRegistry = icon_registry_2.MdIconRegistry;\r\n/** Exception thrown when an invalid icon name is passed to an md-icon component. */\r\nvar MdIconInvalidNameError = (function (_super) {\r\n    __extends(MdIconInvalidNameError, _super);\r\n    function MdIconInvalidNameError(iconName) {\r\n        _super.call(this, \"Invalid icon name: \\\"\" + iconName + \"\\\"\");\r\n    }\r\n    return MdIconInvalidNameError;\r\n}(error_1.MdError));\r\nexports.MdIconInvalidNameError = MdIconInvalidNameError;\r\n/**\r\n * Component to display an icon. It can be used in the following ways:\r\n * - Specify the svgSrc input to load an SVG icon from a URL. The SVG content is directly inlined\r\n *   as a child of the <md-icon> component, so that CSS styles can easily be applied to it.\r\n *   The URL is loaded via an XMLHttpRequest, so it must be on the same domain as the page or its\r\n *   server must be configured to allow cross-domain requests.\r\n *   Example:\r\n *     <md-icon svgSrc=\"assets/arrow.svg\"></md-icon>\r\n *\r\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\r\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\r\n *   MdIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\r\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\r\n *   Examples:\r\n *     <md-icon svgIcon=\"left-arrow\"></md-icon>\r\n *     <md-icon svgIcon=\"animals:cat\"></md-icon>\r\n *\r\n * - Use a font ligature as an icon by putting the ligature text in the content of the <md-icon>\r\n *   component. By default the Material icons font is used as described at\r\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\r\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\r\n *   desired font, or to an alias previously registered with MdIconRegistry.registerFontClassAlias.\r\n *   Examples:\r\n *     <md-icon>home</md-icon>\r\n *     <md-icon fontSet=\"myfont\">sun</md-icon>\r\n *\r\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\r\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\r\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\r\n *   https://fortawesome.github.io/Font-Awesome/examples/\r\n *   Example:\r\n *     <md-icon fontSet=\"fa\" fontIcon=\"alarm\"></md-icon>\r\n */\r\nvar MdIcon = (function () {\r\n    function MdIcon(_element, _renderer, _mdIconRegistry) {\r\n        this._element = _element;\r\n        this._renderer = _renderer;\r\n        this._mdIconRegistry = _mdIconRegistry;\r\n        this.hostAriaLabel = '';\r\n    }\r\n    /**\r\n     * Splits an svgIcon binding value into its icon set and icon name components.\r\n     * Returns a 2-element array of [(icon set), (icon name)].\r\n     * The separator for the two fields is ':'. If there is no separator, an empty\r\n     * string is returned for the icon set and the entire value is returned for\r\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\r\n     * Throws a MdIconInvalidNameError if the name contains two or more ':' separators.\r\n     * Examples:\r\n     *   'social:cake' -> ['social', 'cake']\r\n     *   'penguin' -> ['', 'penguin']\r\n     *   null -> ['', '']\r\n     *   'a:b:c' -> (throws MdIconInvalidNameError)\r\n     */\r\n    MdIcon.prototype._splitIconName = function (iconName) {\r\n        if (!iconName) {\r\n            return ['', ''];\r\n        }\r\n        var parts = iconName.split(':');\r\n        switch (parts.length) {\r\n            case 1:\r\n                // Use default namespace.\r\n                return ['', parts[0]];\r\n            case 2:\r\n                return parts;\r\n            default:\r\n                throw new MdIconInvalidNameError(iconName);\r\n        }\r\n    };\r\n    /** TODO: internal */\r\n    MdIcon.prototype.ngOnChanges = function (changes) {\r\n        var _this = this;\r\n        var changedInputs = Object.keys(changes);\r\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\r\n        if (changedInputs.indexOf('svgIcon') != -1 || changedInputs.indexOf('svgSrc') != -1) {\r\n            if (this.svgIcon) {\r\n                var _a = this._splitIconName(this.svgIcon), namespace = _a[0], iconName = _a[1];\r\n                this._mdIconRegistry.getNamedSvgIcon(iconName, namespace).subscribe(function (svg) { return _this._setSvgElement(svg); }, function (err) { return console.log(\"Error retrieving icon: \" + err); });\r\n            }\r\n            else if (this.svgSrc) {\r\n                this._mdIconRegistry.getSvgIconFromUrl(this.svgSrc).subscribe(function (svg) { return _this._setSvgElement(svg); }, function (err) { return console.log(\"Error retrieving icon: \" + err); });\r\n            }\r\n        }\r\n        if (this._usingFontIcon()) {\r\n            this._updateFontIconClasses();\r\n        }\r\n        this._updateAriaLabel();\r\n    };\r\n    /** TODO: internal */\r\n    MdIcon.prototype.ngOnInit = function () {\r\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\r\n        // e.g. <md-icon>arrow</md-icon>. In this case we need to add a CSS class for the default font.\r\n        if (this._usingFontIcon()) {\r\n            this._updateFontIconClasses();\r\n        }\r\n    };\r\n    /** TODO: internal */\r\n    MdIcon.prototype.ngAfterViewChecked = function () {\r\n        // Update aria label here because it may depend on the projected text content.\r\n        // (e.g. <md-icon>home</md-icon> should use 'home').\r\n        this._updateAriaLabel();\r\n    };\r\n    MdIcon.prototype._updateAriaLabel = function () {\r\n        var ariaLabel = this._getAriaLabel();\r\n        if (ariaLabel) {\r\n            this._renderer.setElementAttribute(this._element.nativeElement, 'aria-label', ariaLabel);\r\n        }\r\n    };\r\n    MdIcon.prototype._getAriaLabel = function () {\r\n        // If the parent provided an aria-label attribute value, use it as-is. Otherwise look for a\r\n        // reasonable value from the alt attribute, font icon name, SVG icon name, or (for ligatures)\r\n        // the text content of the directive.\r\n        var label = this.hostAriaLabel ||\r\n            this.alt ||\r\n            this.fontIcon ||\r\n            this._splitIconName(this.svgIcon)[1];\r\n        if (label) {\r\n            return label;\r\n        }\r\n        // The \"content\" of an SVG icon is not a useful label.\r\n        if (this._usingFontIcon()) {\r\n            var text = this._element.nativeElement.textContent;\r\n            if (text) {\r\n                return text;\r\n            }\r\n        }\r\n        // TODO: Warn here in dev mode.\r\n        return null;\r\n    };\r\n    MdIcon.prototype._usingFontIcon = function () {\r\n        return !(this.svgIcon || this.svgSrc);\r\n    };\r\n    MdIcon.prototype._setSvgElement = function (svg) {\r\n        var layoutElement = this._element.nativeElement;\r\n        // Remove existing child nodes and add the new SVG element.\r\n        // We would use renderer.detachView(Array.from(layoutElement.childNodes)) here,\r\n        // but it fails in IE11: https://github.com/angular/angular/issues/6327\r\n        layoutElement.innerHTML = '';\r\n        this._renderer.projectNodes(layoutElement, [svg]);\r\n    };\r\n    MdIcon.prototype._updateFontIconClasses = function () {\r\n        if (!this._usingFontIcon()) {\r\n            return;\r\n        }\r\n        var elem = this._element.nativeElement;\r\n        var fontSetClass = this.fontSet ?\r\n            this._mdIconRegistry.classNameForFontAlias(this.fontSet) :\r\n            this._mdIconRegistry.getDefaultFontSetClass();\r\n        if (fontSetClass != this._previousFontSetClass) {\r\n            if (this._previousFontSetClass) {\r\n                this._renderer.setElementClass(elem, this._previousFontSetClass, false);\r\n            }\r\n            if (fontSetClass) {\r\n                this._renderer.setElementClass(elem, fontSetClass, true);\r\n            }\r\n            this._previousFontSetClass = fontSetClass;\r\n        }\r\n        if (this.fontIcon != this._previousFontIconClass) {\r\n            if (this._previousFontIconClass) {\r\n                this._renderer.setElementClass(elem, this._previousFontIconClass, false);\r\n            }\r\n            if (this.fontIcon) {\r\n                this._renderer.setElementClass(elem, this.fontIcon, true);\r\n            }\r\n            this._previousFontIconClass = this.fontIcon;\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], MdIcon.prototype, \"svgSrc\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], MdIcon.prototype, \"svgIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], MdIcon.prototype, \"fontSet\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], MdIcon.prototype, \"fontIcon\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], MdIcon.prototype, \"alt\", void 0);\r\n    __decorate([\r\n        core_1.Input('aria-label'), \r\n        __metadata('design:type', String)\r\n    ], MdIcon.prototype, \"hostAriaLabel\", void 0);\r\n    MdIcon = __decorate([\r\n        core_1.Component({\r\n            moduleId: module.id,\r\n            template: '<ng-content></ng-content>',\r\n            selector: 'md-icon',\r\n            styles: [\"/** The width/height of the icon element. */ /** This works because we're using ViewEncapsulation.None. If we used the default encapsulation, the selector would need to be \\\":host\\\". */ md-icon { background-repeat: no-repeat; display: inline-block; fill: currentColor; height: 24px; width: 24px; } \"],\r\n            host: {\r\n                'role': 'img',\r\n            },\r\n            encapsulation: core_1.ViewEncapsulation.None,\r\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush,\r\n        }), \r\n        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer, icon_registry_1.MdIconRegistry])\r\n    ], MdIcon);\r\n    return MdIcon;\r\n}());\r\nexports.MdIcon = MdIcon;\r\nexports.MD_ICON_DIRECTIVES = [MdIcon];\r\n//# sourceMappingURL=icon.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular2-material/icon/icon.js\n ** module id = 564\n ** module chunks = 3\n **/","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { ROUTER_DIRECTIVES } from '@angular/router';\n\n\n@Component({\n  selector: 'app',\n  encapsulation: ViewEncapsulation.None,\n  styles: [\n    require('./app.style.css')\n  ],\n  template: `\n<md-content>\n<md-toolbar color=\"primary\">\n<span>{{ name }}</span>\n<span class=\"fill\"></span>\n<a md-button router-active [routerLink]=\" ['home'] \">\nHome\n</a>\n<a md-button router-active [routerLink]=\"['bot']\">\nBot\n</a>\n<a md-button router-active [routerLink]=\" ['about'] \">\nAbout\n</a>\n</md-toolbar>\n\n<md-progress-bar mode=\"indeterminate\" color=\"primary\" *ngIf=\"loading\"></md-progress-bar>\n\n<router-outlet></router-outlet>\n\n<footer>\n<span id=\"footerText\">Made with <a [href]=\"githubUrl\">WebPack Angular 2 Starter</a> by <a [href]=\"url\">@AngularClass</a></span>\n</footer>\n</md-content>\n`,\n  directives: [ROUTER_DIRECTIVES]\n})\n\nexport class App {\n  angularclassLogo = 'assets/img/angularclass-avatar.png';\n  loading = false;\n  name = 'Simple Chat Bot App';\n  url = 'https://twitter.com/AngularClass';\n  githubUrl = 'https://github.com/AngularClass/angular2-webpack-starter/tree/material2';\n\n  constructor() { }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/app/app.component.ts\n **/","import { Component,\n         Input,\n         trigger,\n         state,\n         style,\n         transition,\n         animate } from '@angular/core';\n\n\nimport { ROUTER_DIRECTIVES } from '@angular/router';\n\n\n@Component({\n  selector: 'bot',\n  styles:[require('./bot.styles.css')],\n  template: require('./bot.template.html'),\n  directives: [ROUTER_DIRECTIVES]\n})\n\nexport class Bot {\n  botAvatar = \"../assets/img/happy-robot.png\";\n\n  constructor(){}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/app/bot/bot.component.ts\n **/","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MiniConvo } from './mini-convo';\nimport { ConvoService } from './convo.service.ts';\n\n\n@Component({\n  selector: 'convo',\n  template: require('./convo.template.html'),\n  styles: [require('./convo.styles.css')]\n})\n\nexport class Convo{\n  questionToBeAsked: string;\n  tempAnswer: string;\n  conversation: MiniConvo[];\n\n  constructor(\n    public convoService: ConvoService,\n    public router: Router\n  ) {  }\n\n  onClear(){\n    if(this.questionToBeAsked === undefined){\n      this.router.navigate(['/bot']);\n    }\n    else if(this.questionToBeAsked !== \"\"){\n      this.questionToBeAsked = \"\";\n    }\n    //check to see if there are any elements in the conversation\n    else if(this.conversation && this.conversation.length){\n      //pop if there are\n      console.log('popping convo');\n      this.conversation.pop();\n    }\n    else{\n      this.router.navigate(['/bot']);\n    }//end else\n  }\n\n  onEnterKey($event){\n    $event.stopPropagation();\n    //checks to see if the Enter key was hit\n    if($event.keyCode == 13){\n      //run ask question if it is 13\n      this.askQuestion();\n    }\n  }\n\n  askQuestion(){\n    if(typeof this.questionToBeAsked === 'undefined'){ return; }\n\n    let question = this.questionToBeAsked.trim();\n    if(question.length < 1){ return; }\n\n    let excerpt = this.convoService.createConvo(this.questionToBeAsked);\n    this.conversation = this.conversation || [];\n    this.conversation.push(excerpt);\n\n    this.questionToBeAsked = \"\";\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/app/bot/convo/convo.component.ts\n **/","export class MiniConvo{\n  question: string;\n  answer: string;\n\n  constructor(ansr: string, qstn: string){\n    this.question = qstn;\n    this.answer = ansr;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/app/bot/convo/mini-convo.ts\n **/","import { Component } from '@angular/core';\n\nimport { Title } from './title';\nimport { XLarge } from './x-large';\n\n@Component({\n\n  selector: 'home',\n  providers: [\n    Title\n  ],\n\n  directives: [\n    XLarge\n  ],\n  styles: [ require('./home.style.css') ],\n  template: require('./home.template.html')\n})\nexport class Home {\n\n  constructor(\n    public title: Title\n  ) { }\n\n  submitState(value) {\n    console.log('submitState', value);\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/app/home/home.component.ts\n **/","export * from './title.service';\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/app/home/title/index.ts\n **/","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class Title {\n  value = 'Angular 2';\n  constructor(public http: Http) {}\n\n  /***\n   * getData\n   *\n   * Gets the data.\n   */\n  getData() {\n    console.log('Title#getData(): Get Data');\n\n    return {\n      value: 'AngularClass'\n    };\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/app/home/title/title.service.ts\n **/","export * from './x-large.directive';\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/app/home/x-large/index.ts\n **/","import { Component, Directive, ElementRef, Renderer } from '@angular/core';\n/*\n * Directive\n * XLarge is a simple directive to show how one is made\n */\n@Directive({\n  selector: '[x-large]' // using [ ] means selecting attributes\n})\nexport class XLarge {\n  constructor(element: ElementRef, renderer: Renderer) {\n    // simple DOM manipulation to set font size to x-large\n    // `nativeElement` is the direct reference to the DOM element\n    // element.nativeElement.style.fontSize = 'x-large';\n\n    // for server/webworker support use the renderer\n    renderer.setElementStyle(element.nativeElement, 'fontSize', 'x-large');\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/app/home/x-large/x-large.directive.ts\n **/","// App\nexport * from './app.component';\nexport * from './app.routes';\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/app/index.ts\n **/","export * from './no-content';\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/app/no-content/index.ts\n **/","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'no-content',\n  template: `\n    <div>\n      <h1>404: content not found</h1>\n    </div>\n  `\n})\nexport class NoContent {}\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/app/no-content/no-content.ts\n **/","export * from './browser-directives';\nexport * from './browser-pipes';\nexport * from './browser-providers';\n\nimport { DIRECTIVES } from './browser-directives';\nimport { PIPES } from './browser-pipes';\nimport { PROVIDERS } from './browser-providers';\n\n\nexport const PLATFORM_PROVIDERS = [\n  ...PROVIDERS,\n  ...DIRECTIVES,\n  ...PIPES\n];\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/platform/browser.ts\n **/","\n// Angular 2\n// rc2 workaround\nimport { enableDebugTools, disableDebugTools } from '@angular/platform-browser';\nimport { enableProdMode } from '@angular/core';\n// Environment Providers\nlet PROVIDERS = [\n  // common env directives\n];\n\n// Angular debug tools in the dev console\n// https://github.com/angular/angular/blob/86405345b781a9dc2438c0fbe3e9409245647019/TOOLS_JS.md\nlet _decorateComponentRef = function identity(value) { return value; };\n\nif ('production' === ENV) {\n  // Production\n  disableDebugTools();\n  enableProdMode();\n\n  PROVIDERS = [\n    ...PROVIDERS,\n    // custom providers in production\n  ];\n\n} else {\n\n  _decorateComponentRef = (cmpRef) => enableDebugTools(cmpRef);\n\n  // Development\n  PROVIDERS = [\n    ...PROVIDERS,\n    // custom providers in development\n  ];\n\n}\n\nexport const decorateComponentRef = _decorateComponentRef;\n\nexport const ENV_PROVIDERS = [\n  ...PROVIDERS\n];\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./src/platform/environment.ts\n **/","module.exports = function (namespace) {\n  return new Promise(function (resolve) {\n    require.ensure([], function (require) {\n      if (namespace) {\n        resolve(require(\"!!/home/ben/Code/typescript/ng2-denver-answerbot/node_modules/awesome-typescript-loader/dist.babel/entry.js!/home/ben/Code/typescript/ng2-denver-answerbot/node_modules/angular2-template-loader/index.js!/home/ben/Code/typescript/ng2-denver-answerbot/src/app/about/index.ts\")[namespace]);\n      } else {\n        resolve(require(\"!!/home/ben/Code/typescript/ng2-denver-answerbot/node_modules/awesome-typescript-loader/dist.babel/entry.js!/home/ben/Code/typescript/ng2-denver-answerbot/node_modules/angular2-template-loader/index.js!/home/ben/Code/typescript/ng2-denver-answerbot/src/app/about/index.ts\"));\n      }\n    });\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/es6-promise-loader!./src/app/about/index.ts\n ** module id = 583\n ** module chunks = 3\n **/","module.exports = \"<div class=\\\"bot\\\" class=\\\"ng-animate\\\">\\n  <md-card>\\n    <md-card-header>\\n      <img md-card-avatar [src]=\\\"botAvatar\\\" alt=\\\"Denver Robo\\\">\\n      <md-card-title>Denver Info Bot</md-card-title>\\n      <md-card-subtitle>I'm here to help!</md-card-subtitle>\\n    </md-card-header>\\n    <img md-card-image\\n         src=\\\"../assets/img/denver-arial.jpg\\\"\\n         alt=\\\"Denver Arial View\\\"\\n         class=\\\"\\\">\\n    <md-card-content>\\n      <i>\\\"Let's talk Denver!\\\"</i>\\n    </md-card-content>\\n    <span class=\\\"card-buttons\\\">\\n      <md-card-actions>\\n        <a md-raised-button\\n           class=\\\"card-btn\\\" color=\\\"warn\\\"\\n           [routerLink]=\\\"['../home']\\\">Exit</a>\\n        <a md-raised-button\\n           class=\\\"card-btn\\\" color=\\\"primary\\\"\\n           [routerLink]=\\\"['../bot/conversation']\\\">Start Chat</a>\\n      </md-card-actions>\\n    </span>\\n  </md-card>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/bot/bot.template.html\n ** module id = 584\n ** module chunks = 3\n **/","module.exports = \"<!-- questions and answers here -->\\n<div *ngIf=\\\"conversation\\\">\\n  <md-toolbar layout=\\\"row\\\">\\n    <div class=\\\"md-toolbar-tool\\\">\\n      Conversation\\n    </div>\\n  </md-toolbar>\\n  <div *ngFor=\\\"let excerpt of conversation\\\" class=\\\"convo-div\\\">\\n    <md-card class=\\\"question-card animated-card\\\">\\n      <h4 style=\\\"margin-bottom:10px\\\">You</h4>\\n      {{excerpt.question}}\\n    </md-card>\\n    <md-card class=\\\"answer-card animated-answer-card\\\">\\n      <h4 style=\\\"margin-bottom:10px\\\">Robot</h4>\\n      {{excerpt.answer}}\\n    </md-card>\\n  </div>\\n</div>\\n\\n<md-card>\\n  <a id=\\\"go-back-convo-btn\\\" md-fab\\n     [routerLink]=\\\"['../']\\\"\\n     color=\\\"neutral\\\" class=\\\"back-arrow\\\" >\\n    <md-icon class=\\\"md-24\\\">keyboard_backspace</md-icon>\\n  </a>\\n  <md-toolbar color=\\\"primary\\\">Ask me a question!</md-toolbar>\\n  <p></p>\\n  <md-input bindon-ngModel=\\\"questionToBeAsked\\\" (keyup)=\\\"onEnterKey($event)\\\"\\n            style=\\\"width: 100%\\\" placeholder=\\\"Question\\\">\\n  </md-input>\\n  <span class=\\\"card-buttons\\\">\\n    <button md-fab color=\\\"warn\\\" (click)=\\\"onClear()\\\">\\n      <md-icon class=\\\"md-24\\\">clear</md-icon>\\n    </button>\\n    <button md-fab color=\\\"primary\\\" (click)=\\\"askQuestion()\\\">\\n      <md-icon class=\\\"md-24\\\">add</md-icon>\\n    </button>\\n  </span>\\n</md-card>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/bot/convo/convo.template.html\n ** module id = 585\n ** module chunks = 3\n **/","module.exports = \"<div class=\\\"card-container\\\">\\n  <md-card x-large class=\\\"sample-content\\\">Simple Denver Robo Thingy</md-card>\\n  <md-card>\\n    I made this very rudimentary app to learn Angular2.\\n  </md-card>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/home/home.template.html\n ** module id = 586\n ** module chunks = 3\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar forkJoin_1 = require('../../observable/forkJoin');\nObservable_1.Observable.forkJoin = forkJoin_1.forkJoin;\n//# sourceMappingURL=forkJoin.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/forkJoin.js\n ** module id = 591\n ** module chunks = 3\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/of.js\n ** module id = 594\n ** module chunks = 3\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar catch_1 = require('../../operator/catch');\nObservable_1.Observable.prototype.catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/catch.js\n ** module id = 595\n ** module chunks = 3\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar do_1 = require('../../operator/do');\nObservable_1.Observable.prototype.do = do_1._do;\n//# sourceMappingURL=do.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/do.js\n ** module id = 597\n ** module chunks = 3\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar filter_1 = require('../../operator/filter');\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/filter.js\n ** module id = 599\n ** module chunks = 3\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar finally_1 = require('../../operator/finally');\nObservable_1.Observable.prototype.finally = finally_1._finally;\n//# sourceMappingURL=finally.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/finally.js\n ** module id = 600\n ** module chunks = 3\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar share_1 = require('../../operator/share');\nObservable_1.Observable.prototype.share = share_1.share;\n//# sourceMappingURL=share.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/share.js\n ** module id = 604\n ** module chunks = 3\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} an observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    var operator = new CatchOperator(selector);\n    var caught = this.lift(operator);\n    return (operator.caught = caught);\n}\nexports._catch = _catch;\nvar CatchOperator = (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = (function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err) {\n                this.destination.error(err);\n                return;\n            }\n            this._innerSub(result);\n        }\n    };\n    CatchSubscriber.prototype._innerSub = function (result) {\n        this.unsubscribe();\n        this.destination.remove(this);\n        result.subscribe(this.destination);\n    };\n    return CatchSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=catch.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/catch.js\n ** module id = 613\n ** module chunks = 3\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return this.lift(new DoOperator(nextOrObserver, error, complete));\n}\nexports._do = _do;\nvar DoOperator = (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = (function (_super) {\n    __extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=do.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/do.js\n ** module id = 615\n ** module chunks = 3\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctKey}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return this.lift(new FilterOperator(predicate, thisArg));\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n        this.predicate = predicate;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/filter.js\n ** module id = 617\n ** module chunks = 3\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} finallySelector function to be called when source terminates.\n * @return {Observable} an Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction _finally(finallySelector) {\n    return this.lift(new FinallyOperator(finallySelector));\n}\nexports._finally = _finally;\nvar FinallyOperator = (function () {\n    function FinallyOperator(finallySelector) {\n        this.finallySelector = finallySelector;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new FinallySubscriber(subscriber, this.finallySelector));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = (function (_super) {\n    __extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, finallySelector) {\n        _super.call(this, destination);\n        this.add(new Subscription_1.Subscription(finallySelector));\n    }\n    return FinallySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=finally.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/finally.js\n ** module id = 618\n ** module chunks = 3\n **/","\"use strict\";\nvar multicast_1 = require('./multicast');\nvar Subject_1 = require('../Subject');\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .publish().refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} an Observable that upon connection causes the source Observable to emit items to its Observers\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return multicast_1.multicast.call(this, shareSubjectFactory).refCount();\n}\nexports.share = share;\n;\n//# sourceMappingURL=share.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/share.js\n ** module id = 623\n ** module chunks = 3\n **/","module.exports = \"html, body{\\n  height: 100%;\\n  background: #F4FAFA;\\n}\\nbutton.active{\\n  background: #fff;\\n  color: #009688;\\n}\\nbutton.active:hover{\\n  color: #fff;\\n}\\n.fill{\\n  flex: 1 1 auto;\\n}\\n.app-state{\\n  margin: 15px;\\n  flex: 1;\\n}\\n.home{\\n  flex: 1;\\n}\\nmd-content{\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n}\\nfooter{\\n  flex: 0 0 60px;\\n  padding: 10px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  background: #fff;\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/app.style.css\n ** module id = 799\n ** module chunks = 3\n **/","module.exports = \"h1 {\\n  font-family: Arial, Helvetica, sans-serif\\n}\\n\\n.bot-avatar {\\n  width: 10%;\\n  height: 10%;\\n}\\n\\n.card-buttons{\\n  display: inline-block;\\n  margin-left: 80%;\\n}\\n\\n@media only screen and (max-width: 983px) {\\n  .card-buttons {\\n    display: inline-block;\\n    margin-left: 70%;\\n  }\\n}\\n\\n@media only screen and (max-width: 750px) {\\n  .card-buttons {\\n    display: inline-block;\\n    margin-left: 60%;\\n  }\\n}\\n\\n@media only screen and (max-width: 571px) {\\n  .card-buttons {\\n    display: inline-block;\\n    margin-left: 50%;\\n  }\\n}\\n\\n@media only screen and (max-width: 475) {\\n  .card-buttons {\\n    display: inline-block;\\n    margin-left: auto;\\n  }\\n}\\n\\n.card-btn{\\n  margin-bottom: 10px;\\n}\\n\\nmd-card{\\n  margin: 50px;\\n}\\n\\n@keyframes SlideIn {\\n  from {\\n    margin-left: 100%;\\n    width: 300%;\\n  }\\n\\n  to {\\n    margin-left: 0%;\\n    width: 100%;\\n  }\\n}\\n\\nbot.ng-enter{\\n  margin-left: 100%;\\n\\n}\\n\\nbot {\\n  margin-left: 0%;\\n  transition: margin-left 1s linear;\\n  animation-duration: 1s;\\n  animation-name: slidein;\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/bot/bot.styles.css\n ** module id = 800\n ** module chunks = 3\n **/","module.exports = \"md-toolbar{\\n  margin-bottom: 40px;\\n}\\n\\nmd-card {\\n  margin: 25px;\\n  padding-bottom: 70px;\\n  margin-top: 0px;\\n}\\n\\n.back-arrow {\\n  position: relative;\\n  top: -30px;\\n  left: -30px;\\n}\\n\\n.convo-div{\\n  height: 200px;\\n}\\n\\n.answer-card{\\n  display: block;\\n  position: relative;\\n  left: 50%;\\n  top: -169px;\\n  width: 350px;\\n  height: 75px;\\n  margin-bottom: 0px;\\n}\\n\\n.question-card{\\n  display: block;\\n  position: relative;\\n  left: 10%;\\n  width: 350px;\\n  height: 75px;\\n  margin-bottom: 0px;\\n}\\n\\n@keyframes CardAnimation{\\n  0%{\\n    color: rgb(255,255,255);\\n    transform: scale(0.3);\\n  }\\n  65%{\\n    color: rgb(255,255,255);\\n  }\\n\\n  100%{\\n    color: rgb(0,0,0);\\n    display: block;\\n    transform: scale(1);\\n  }\\n}\\n\\n.animated-card{\\n\\n  animation: CardAnimation 0.5s;\\n}\\n\\n.animated-answer-card{\\n  -webkit-animation-delay: 0.5s;\\n  animation-delay: 0.5s;\\n  animation: CardAnimation 0.5s;\\n}\\n\\n.card-buttons{\\n  display: inline-block;\\n  margin-left: 80%;\\n  float: right;\\n}\\n\\n@media only screen and (max-width: 1480px) {\\n  .answer-card{\\n    left: 50%;\\n    width: 300px;\\n  }\\n  .question-card{\\n    left: 10%;\\n    width: 300px;\\n  }\\n}\\n\\n@media only screen and (max-width: 983px) {\\n  .card-buttons {\\n    display: inline-block;\\n    margin-left: 70%;\\n  }\\n  .answer-card{\\n    left: 50%;\\n    width: 200px;\\n  }\\n  .question-card{\\n    left: 10%;\\n    width: 200px;\\n  }\\n}\\n\\n\\n\\n@media only screen and (max-width: 750px) {\\n  .card-buttons {\\n    display: inline-block;\\n    margin-left: 60%;\\n  }\\n  .answer-card{\\n    left: 50%;\\n    width: 150px;\\n  }\\n  .question-card{\\n    left: 10%;\\n    width: 150px;\\n  }\\n}\\n\\n@media only screen and (max-width: 571px) {\\n  .card-buttons {\\n    display: inline-block;\\n    margin-left: 50%;\\n  }\\n}\\n\\n@media only screen and (max-width: 475px) {\\n  .card-buttons {\\n    display: inline-block;\\n    margin-left: auto;\\n  }\\n  .answer-card{\\n    left: 50%;\\n    width: 150px;\\n  }\\n  .question-card{\\n    left: 10%;\\n    width: 150px;\\n  }\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/bot/convo/convo.styles.css\n ** module id = 801\n ** module chunks = 3\n **/","module.exports = \".card-container{\\n  display: flex;\\n  flex-direction: column;\\n  margin: 15px;\\n}\\n.sample-content{\\n  flex: 1;\\n}\\n.card-container md-card{\\n  margin: 5px;\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/home/home.style.css\n ** module id = 802\n ** module chunks = 3\n **/"],"mappings":";;;;;;AAAA;;AAEA;AACA;AAEA;;;AAGA;AACA;AACA;AAGA;;;AAGA;AACA;AAEA;AAEA;AAEA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAZA;AAcA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;ACzjNA;AAAA;;AAAA;AAkNA;AAAA;AAjNA;;;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;;;;;;;;ACvBA;;AAEA;;AAEA;AAEA;AACA;AAIA;AACA;AACA;;;;;;;;ACbA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAEA;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7OA;AAEA;AAqCA;AAOA;AANA;AACA;AACA;AACA;AACA;AAEA;AAzCA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAyBA;AACA;;AAAA;AAWA;AAAA;AATA;;;;;;;;;ACvCA;AASA;AAUA;AAGA;AAFA;AAEA;AAVA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAOA;AAAA;AALA;;;;;;;;;ACnBA;AACA;AAGA;AASA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAtDA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AAmDA;;AAAA;AAjDA;;;;;;;;;ACbA;AAIA;AACA;AACA;AACA;AACA;AAAA;AARA;;;;;;;;;ACAA;AAEA;AACA;AAeA;AAEA;AACA;AACA;AAEA;AACA;AACA;AArBA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAWA;;AAAA;AAVA;;;;;;;;;;;;AClBA;;;;;;;;;ACAA;AACA;AAGA;AAEA;AAAA;AADA;AACA;AAEA;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAhBA;AAAA;;AAAA;AAkBA;;AAAA;AAjBA;;;;;;;;;;;;ACJA;;;;;;;;;ACAA;AACA;;;AAGA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAXA;AAAA;AACA;AACA;;AAAA;AAUA;;AAAA;AATA;;;;;;;;;;;;ACRA;AACA;AACA;;;;;;;;;;;;ACFA;;;;;;;;;ACAA;AAUA;AAAA;AAAA;AARA;AAAA;AACA;AACA;AAKA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;ACVA;AACA;AACA;AAEA;AACA;AACA;AAGA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AAAA;AAEA;AAEA;AACA;AAKA;AAEA;AAEA;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACVA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvBA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;","sourceRoot":""}